@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <!-- Earnings (Monthly) Card -->
        <div class="col-xl-4 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Doanh thu (theo tháng)
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800" id="monthlyEarnings">0 VND</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Costs (Monthly) Card -->
        <div class="col-xl-4 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Chi phí (theo tháng)
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800" id="monthlyCosts">0 VND</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Profits (Monthly) Card -->
        <div class="col-xl-4 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                Lợi nhuận (theo tháng)
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800" id="monthlyProfits">0 VND</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-chart-line fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Earnings (Annual) Card -->
        <div class="col-xl-4 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Doanh thu (theo năm)
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800" id="annualEarnings">0 VND</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Costs (Annual) Card -->
        <div class="col-xl-4 col-md-6 mb-4">
            <div class="card border-left-danger shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                                Chi phí (theo năm)
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800" id="annualCosts">0 VND</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Profits (Annual) Card -->
        <div class="col-xl-4 col-md-6 mb-4">
            <div class="card border-left-secondary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-secondary text-uppercase mb-1">
                                Lợi nhuận (theo năm)
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800" id="annualProfits">0 VND</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-chart-line fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Toggle Button -->
    <div class="row mb-4">
        <div class="col-md-12 text-center">
            <button id="toggleButton" class="btn btn-primary">Hiển thị theo năm</button>
        </div>
    </div>

    <div class="col-xl-12 col-lg-12">
        <!-- Area Chart for Earnings -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Doanh thu</h6>
            </div>
            <div class="card-body">
                <div class="chart-area">
                    <canvas id="myEarningsChart"></canvas>
                </div>
            </div>
        </div>
        <!-- Area Chart for Costs -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Chi phí</h6>
            </div>
            <div class="card-body">
                <div class="chart-area">
                    <canvas id="myCostsChart"></canvas>
                </div>
            </div>
        </div>
        <!-- Area Chart for Profits -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Lợi nhuận</h6>
            </div>
            <div class="card-body">
                <div class="chart-area">
                    <canvas id="myProfitsChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.font.family = 'Nunito, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif';
        Chart.defaults.color = '#858796';

        let currentMode = 'monthly'; // Default mode
        let earningsChart, costsChart, profitsChart; // Declare chart instances

        function number_format(number, decimals, dec_point, thousands_sep) {
            number = (number + '').replace(',', '').replace(' ', '');
            var n = !isFinite(+number) ? 0 : +number,
                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                s = '',
                toFixedFix = function (n, prec) {
                    var k = Math.pow(10, prec);
                    return '' + Math.round(n * k) / k;
                };
            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
            if (s[0].length > 3) {
                s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
            }
            if ((s[1] || '').length < prec) {
                s[1] = s[1] || '';
                s[1] += new Array(prec - s[1].length + 1).join('0');
            }
            return s.join(dec);
        }

        function loadChartData() {

            // Load summary data
            $.ajax({
                url: '@Url.Action("GetFinancialSummary", "Admin")', // Adapt to your specific URL
                type: 'GET',
                success: function (data) {
                    $('#monthlyEarnings').text(number_format(data.monthlyEarnings) + " VND");
                    $('#annualEarnings').text(number_format(data.annualEarnings) + " VND");
                    $('#monthlyCosts').text(number_format(data.monthlyCosts) + " VND");
                    $('#annualCosts').text(number_format(data.annualCosts) + " VND");
                    $('#monthlyProfits').text(number_format(data.monthlyProfits) + " VND");
                    $('#annualProfits').text(number_format(data.annualProfits) + " VND");
                }
            });

            // Load chart data
            let url = currentMode === 'monthly' ? '@Url.Action("GetDailyFinancialData", "Admin")' : '@Url.Action("GetYearlyFinancialData", "Admin")';

            $.ajax({
                url: url, // Adapt to your specific URL
                type: 'GET',
                success: function (data) {
                    let labels = [];
                    let earnings = [];
                    let costs = [];
                    let profits = [];

                    data.forEach(function (item) {
                        let date = new Date(item.date);
                        let formattedDate = currentMode === 'monthly' ? `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}` : `${date.getMonth() + 1}/${date.getFullYear()}`;
                        labels.push(formattedDate);
                        earnings.push(item.earnings);
                        costs.push(item.costs);
                        profits.push(item.profits);
                    });

                    updateChart('myEarningsChart', labels, earnings, 'Doanh thu', 'earningsChart');
                    updateChart('myCostsChart', labels, costs, 'Chi phí', 'costsChart');
                    updateChart('myProfitsChart', labels, profits, 'Lợi nhuận', 'profitsChart');
                }
            });
        }

        function updateChart(chartId, labels, data, label, chartInstanceName) {
            // Destroy existing chart instance if it exists
            if (window[chartInstanceName]) {
                window[chartInstanceName].destroy();
            }

            let ctx = document.getElementById(chartId).getContext('2d');
            window[chartInstanceName] = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: label,
                        lineTension: 0.3,
                        backgroundColor: "rgba(78, 115, 223, 0.05)",
                        borderColor: "rgba(78, 115, 223, 1)",
                        pointRadius: 3,
                        pointBackgroundColor: "rgba(78, 115, 223, 1)",
                        pointBorderColor: "rgba(78, 115, 223, 1)",
                        pointHoverRadius: 3,
                        pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                        pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                        pointHitRadius: 10,
                        pointBorderWidth: 2,
                        data: data,
                    }],
                },
                options: {
                    maintainAspectRatio: false,
                    layout: {
                        padding: {
                            left: 10,
                            right: 25,
                            top: 25,
                            bottom: 0
                        }
                    },
                    scales: {
                        xAxes: [{
                            time: {
                                unit: currentMode === 'monthly' ? 'date' : 'month',
                            },
                            gridLines: {
                                display: false,
                                drawBorder: false
                            },
                            ticks: {
                                maxTicksLimit: 7
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                maxTicksLimit: 5,
                                padding: 10,
                                callback: function (value, index, values) {
                                    return number_format(value) + ' VND';
                                }
                            },
                            gridLines: {
                                color: "rgb(234, 236, 244)",
                                zeroLineColor: "rgb(234, 236, 244)",
                                drawBorder: false,
                                borderDash: [2],
                                zeroLineBorderDash: [2]
                            }
                        }],
                    },
                    legend: {
                        display: false
                    },
                    tooltips: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyFontColor: "#858796",
                        titleMarginBottom: 10,
                        titleFontColor: '#6e707e',
                        titleFontSize: 14,
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        xPadding: 15,
                        yPadding: 15,
                        displayColors: false,
                        intersect: false,
                        mode: 'index',
                        caretPadding: 10,
                        callbacks: {
                            label: function (tooltipItem, chart) {
                                var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                                return datasetLabel + ': ' + number_format(tooltipItem.yLabel) + ' VND';
                            }
                        }
                    }
                }
            });
        }

        $(document).ready(function () {
            loadChartData();

            $('#toggleButton').click(function () {
                currentMode = currentMode === 'monthly' ? 'yearly' : 'monthly';
                loadChartData();
                $(this).text(currentMode === 'monthly' ? 'Hiển thị theo năm' : 'Hiển thị theo tháng');
            });
        });
    </script>
}

