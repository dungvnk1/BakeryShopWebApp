@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<Bakery>
<!doctype html>
<html lang="zxx">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Danh sách sản phẩm</title>
    <link rel="icon" href="/img/favicon.png">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <!-- animate CSS -->
    <link rel="stylesheet" href="/css/animate.css">
    <!-- owl carousel CSS -->
    <link rel="stylesheet" href="/css/owl.carousel.min.css">
    <!-- font awesome CSS -->
    <link rel="stylesheet" href="/css/all.css">
    <!-- flaticon CSS -->
    <link rel="stylesheet" href="/css/flaticon.css">
    <link rel="stylesheet" href="/css/themify-icons.css">
    <!-- font awesome CSS -->
    <link rel="stylesheet" href="/css/magnific-popup.css">
    <!-- swiper CSS -->
    <link rel="stylesheet" href="/css/slick.css">
    <!-- style CSS -->
    <link rel="stylesheet" href="/css/style.css">
    <style>
        .section_padding {
            padding: 100px 0px;
        }

        .searchbt:hover {
            background-color: #2FCAE9 !important;
        }
    </style>
</head>
<body>
    <!--::header part start::-->
    @await Component.InvokeAsync("Header");
    <!-- Header part end-->
    <!-- breadcrumb part start-->
    <section class="breadcrumb_part">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb_iner">
                        <h2>product list</h2>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- breadcrumb part end-->
    <!-- product list part start-->
    <section class="product_list section_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-9 product_sidebar">
                            <form id="searchForm" style="display:flex">
                                <input type="text" name="keyword" id="keyword" placeholder="Tìm kiếm" class="form-control" style="width:200px; margin-right:6px" value="@ViewData["keyword"]">
                                <select id="categoryID" name="categoryID" class="form-control" style="width:200px;margin-right:6px">
                                    <option value="">Chọn danh mục</option>
                                    @foreach (var category in (IEnumerable<KingBakery.Models.Category>)ViewData["Categories"])
                                    {
                                        var isSelected = category.ID == (int?)ViewData["categoryID"] ? "selected" : "";
                                        if (isSelected == "selected")
                                        {
                                            <option value="@category.ID" selected>
                                                @category.Name
                                            </option>
                                        }
                                        else
                                        {
                                            <option value="@category.ID">
                                                @category.Name
                                            </option>
                                        }
                                    }
                                </select>
                                <select name="priceRange" id="priceRange" class="form-control" style="width:200px;margin-right:6px">
                                    <option value="">Chọn mức giá</option>
                                    @if (@ViewData["priceRange"] != null && "0-100000" == @ViewData["priceRange"].ToString())
                                    {
                                        <option value="0-100000" selected>0 - 100,000đ</option>
                                    }
                                    else
                                    {
                                        <option value="0-100000">0 - 100,000đ</option>
                                    }
                                    @if (@ViewData["priceRange"] != null && "100000-200000" == @ViewData["priceRange"].ToString())
                                    {
                                        <option value="100000-200000" selected>100,000đ - 200,000đ</option>
                                    }
                                    else
                                    {
                                        <option value="100000-200000">100,000đ - 200,000đ</option>
                                    }
                                    @if (@ViewData["priceRange"] != null && "200000-500000" == @ViewData["priceRange"].ToString())
                                    {
                                        <option value="200000-500000" selected>200,000đ - 500,000đ</option>
                                    }
                                    else
                                    {
                                        <option value="200000-500000">200,000đ - 500,000đ</option>
                                    }
                                    @if (@ViewData["priceRange"] != null && "500000+" == @ViewData["priceRange"].ToString())
                                    {
                                        <option value="500000+" selected>500,000đ+</option>
                                    }
                                    else
                                    {
                                        <option value="500000+">500,000đ+</option>
                                    }

                                </select>
                                <input type="hidden" name="page" id="page" value="1">
                              @*   <button type="button" onclick="searchByName()" class="btn btn-primary">Search</button> *@
                                <button type="button" onclick="searchByName()" class="btn btn-primary searchbt" style="background-color: #06A2C8; border:none;">
                                    Tìm kiếm
                                </button>
                            </form>
                        </div>
                        <br /></br>
                        <div class="col-3" style="float:right;display:flex">
                            @{
                                var bestSeller = ViewData["bestseller"] as dynamic;
                                var newestProduct = ViewData["newestProduct"] as dynamic;
                            }
                            @if (bestSeller != null)
                            {
                                <a asp-controller="Bakeries" asp-action="Details" asp-route-id="@bestSeller.BakeryID" class="btn btn-primary" style="background-color: #B08EAD">
                                    Best Seller
                                </a>
                            }
                            @if (newestProduct != null)
                            {
                                <a asp-controller="Bakeries" asp-action="Details" asp-route-id="@newestProduct.ID" class="btn btn-primary" style="margin-left:10px; background-color: #B08EAD">
                                    Bánh mới nhất
                                </a>
                            }
                        </div>
                    </div>
                </div>


                <div class="col-md-12" id="product" style="margin-top: 50px;">

                    <div class="product_list">
                        <div class="row justify-content-center">
                            @foreach (var bakery in Model)
                            {
                                @if (!bakery.isDeleted)
                                {
                                    var minPrice = bakery.BakeryOptions.Any() ? bakery.BakeryOptions.Min(bo => bo.Price) : 0;
                                    <div class="col-lg-4 col-sm-4" style="margin-top: 20px;">
                                        <div class="single_product_item">
                                            <img style="width:95%;height:300px;" src="@bakery.Image" alt="#" class="img-fluid">
                                            <h3 style="color:black; font-weight:bold">
                                                <a asp-controller="Bakeries" asp-action="Details" asp-route-id="@bakery.ID">
                                                    @bakery.Name
                                                </a>
                                            </h3>
                                            <p>@($"Price: {minPrice.ToString("#,##0")}đ")</p>

                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>

                    @Html.PagedListPager(Model, page => Url.Action("ProductList", "Home", new { page = page, keyword = @ViewData["keyword"], categoryID = @ViewData["categoryID"], priceRange = @ViewData["priceRange"] }),
                             new PagedListRenderOptions()
                    {
                        LiElementClasses = new List<String> { "page-item" },
                        PageClasses = new List<String> { "page-link" }
                    }
                             )
                </div>



    </section>
    <!-- product list part end-->
    <!--::footer_part start::-->
    @await Component.InvokeAsync("Footer")
    <!--::footer_part end::-->
    <!-- jquery plugins here-->
    <script src="/js/jquery-1.12.1.min.js"></script>
    <!-- popper js -->
    <script src="/js/popper.min.js"></script>
    <!-- bootstrap js -->
    <script src="/js/bootstrap.min.js"></script>
    <!-- easing js -->
    <script src="/js/jquery.magnific-popup.js"></script>
    <!-- swiper js -->
    <script src="/js/swiper.min.js"></script>
    <!-- swiper js -->
    <script src="/js/mixitup.min.js"></script>
    <!-- particles js -->
    <script src="/js/owl.carousel.min.js"></script>
    <script src="/js/jquery.nice-select.min.js"></script>
    <!-- slick js -->
    <script src="/js/slick.min.js"></script>
    <script src="/js/jquery.counterup.min.js"></script>
    <script src="/js/waypoints.min.js"></script>
    <script src="/js/contact.js"></script>
    <script src="/js/jquery.ajaxchimp.min.js"></script>
    <script src="/js/jquery.form.js"></script>
    <script src="/js/jquery.validate.min.js"></script>
    <script src="/js/mail-script.js"></script>
    <!-- custom js -->
    <script src="/js/custom.js"></script>
    <script>
        function searchByName() {
            var form = document.getElementById("searchForm");
            var formData = new FormData(form);

            var queryString = new URLSearchParams(formData).toString();
            fetch(`/Bakeries/Index?${queryString}`, {
                method: 'POST',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => response.text())
                .then(data => {
                    document.getElementById("product").innerHTML = data;
                })
                .catch(error => console.error('Error:', error));
        }
    </script>
</body>

</html>